#jdbc
#spring.datasource.url: ${INFOTRYGDSP_URL}
#spring.datasource.username: ${INFOTRYGDSP_USERNAME}
#spring.datasource.password: ${INFOTRYGDSP_PASSWORD}
#spring.datasource.platform: ${INFOTRYGDSP_PLATFORM}
#spring.datasource.tomcat.driver-class-name: com.oracle.jdbc.OracleDriver
##spring.datasource.initialization-mode=always kjører bare schema og data sql med riktig platform navn. Siden det ikke finnes noen for oracle gjør denne bare noe på lokal maskin hvor vi kjører postgres
#spring.datasource.initialization-mode: always

spring:
  datasource:
    url: jdbc:h2:mem:testdb:MODE=Oracle
    username: sa
    password: sa
    platform: h2
    tomcat:
      driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.Oracle10gDialect
    hibernate:
      ddl-auto: "none"
    properties:
      hibernate:
        default_schema: INFOTRYGD_Q0


#oidc...
http.proxy.parametername: notused

no.nav.security.oidc.issuer:
  azure:
    discoveryurl: ${INFOTRYGDSP_DISCOVERY}
    accepted_audience: ${INFOTRYGDSP_AUD}
    proxyurl: ${INFOTRYGDSP_PROXY}

#logging...
logging.level.org.springframework: ${LOGGING_SPRING}
logging.level.no.nav: ${LOGGING_NAV}
