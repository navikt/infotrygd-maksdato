#jdbc
#spring.datasource.url: jdbc:h2:mem:testdb:MODE=Oracle
#spring.datasource.username: sa
#spring.datasource.password: sa
#spring.datasource.platform: h2
#spring.datasource.tomcat.driver-class-name: org.h2.Driver
##spring.datasource.initialization-mode=always kjører bare schema og data sql med riktig platform navn. Siden det ikke finnes noen for oracle gjør denne bare noe på lokal maskin hvor vi kjører postgres
#spring.datasource.initialization-mode: always


spring:
  datasource:
    url: jdbc:h2:mem:testdb:MODE=Oracle
    username: sa
    password: sa
    platform: h2
    tomcat:
      driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.Oracle10gDialect
    hibernate:
      ddl-auto: "none"
    properties:
      hibernate:
        default_schema: INFOTRYGD_Q0

# "spring.jpa.hibernate.ddl-auto=none", // todo: validate
  #    "spring.datasource.initialization-mode=always",
  #//    "spring.datasource.schema=classpath:schema-h2.sql",
  #//    "spring.datasource.data=classpath:data-h2.sql",
  #    "spring.datasource.platform=h2",
  #    "spring.datasource.url=jdbc:h2:mem:testdb:MODE=Oracle",
  #    "spring.jpa.properties.hibernate.default_schema=INFOTRYGD_Q0",
  #    "spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect"

#oidc...
http.proxy.parametername: notused

no.nav.security.oidc.issuer:
  azure:
    discoveryurl: http://metadata
    accepted_audience: aud-localhost
    proxyurl:

#logging...
logging.level.org.springframework: INFO
logging.level.no.nav: INFO